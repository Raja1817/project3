import socket
import ujson
import threading
import random
import math
import time
from os import *


thislist=[("192.168.1.220",12001) ]
TrustScore=dict()
for i in thislist:
    TrustScore[i[0]]=0.5

interval=0.5
alpha = 0.2
beta = 0.1
port1 = 12001
port2 = 12002


s1=socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s2=socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
# print(socket.AF_INET)
print("socket created")

s1.bind(('',port1) )
s2.bind(('',port2) )
print("socket binded to 12001 and 12002")


# Function for changing trust score
def nextScore(currentScore,trustBool):
    if trustBool:
        return (1.0 -(1.0-currentScore)*math.exp(-beta))
    else:
        return currentScore*math.exp(-alpha)



def thr1():
    while True:
        rr1,addr =s1.recvfrom(1024)
        #print(d,addr)
        reci1 =ujson.loads(rr1.decode('utf-8'))
        print("received {} from {} ".format(reci1,addr))
        #print("T1 : Acknowledgement")
        #x="ACK"
        #s1.sendto(ujson.dumps(x).encode('utf-8'),(addr[0],port2))
        # receiving the Random number
        rr2, addr =s1.recvfrom(1024)
        reci2=ujson.loads(rr2.decode('utf-8'))
        print("received {} from {} ".format(reci2,addr))
        #r2=random.uniform(0,10)

        print('Sum up the random numbers ',reci1,'and ',reci2)
        random_variable=random.uniform(0,1)
        print()
        if random_variable<=0.4:
            value=reci1+reci2
        else:
            value=reci1-reci2
        #.sum=input("Enter the sum:")
        s1.sendto(ujson.dumps(value).encode('utf-8'),(addr[0],port2))


        #print(r1)
        # Checking whether r1 and r2 are aggreeing or not
        #if ( (r1 < interval and r2 < interval) or (r1 >= interval and r2 >= interval)):
        #    TrustScore[addr[0]] = nextScore( TrustScore[addr[0]] , True)
        #else:
        #    TrustScore[addr[0]] = nextScore( TrustScore[addr[0]] , False)
        #print(TrustScore[addr[0]])




def thr2():
    while True:
        time.sleep(1)

        neighbour=random.choice(thislist)
        #print(neighbour)
        #msg1="Hell
        #s2.sendto(ujson.dumps(msg1).encode('utf-8'),neighbour)
        #m, addr =s2.recvfrom(1024)
        #msg1 =ujson.loads(m.decode('utf-8'))
        #print(msg1)
        #if msg1 is "NACK":
         #   continue
        r1=random.randint(0,10)
        s2.sendto(ujson.dumps(r1).encode('utf-8'),neighbour)
        print(r1)
        r2=random.randint(0,10)
        s2.sendto(ujson.dumps(r2).encode('utf-8'),neighbour)
        print(r2)
        r3=r1+r2
        print("Expected sum {}".format(r3))
        sum1, addr =s2.recvfrom(1024)
        total=ujson.loads(sum1.decode('utf-8'))
        print("Sum got {} ".format(total))
        print("received {} from {} ".format(total,neighbour))
        if r3==float(total):
            print("Increasing Trust Score")
            TrustScore[addr[0]] = nextScore( TrustScore[addr[0]] , True)
        else:
            TrustScore[addr[0]] = nextScore( TrustScore[addr[0]] , False)
        print(TrustScore[addr[0]])




        #s2.sendto(ujson.dumps(r2).encode('utf-8'),neighbour)
        #d2, addr =s2.recvfrom(1024)
        #data2 =ujson.loads(d2.decode('utf-8'))
        #print(data2)
        #print("recieved {}".format(data2))
        #trust_score=1
        #a=0.5
        #if(d1&d2>=trust_score)
         #  if(d1&&d2>=a)
          #trustscore is increased
        #else       
#t1 = threading.Thread(target=read_output,args=(process,))
t1=threading.Thread(target=thr1)
t2=threading.Thread(target=thr2)
t1.start()
t2.start()


